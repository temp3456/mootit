//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mootit.Pizzeria.Service.Store {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Mootit.Pizzeria.Entities")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double BeverageCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mootit.Pizzeria.Service.Store.Beverage[] BeveragesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long CustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DeliveredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DessertCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mootit.Pizzeria.Service.Store.Dessert[] DessertsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PizzaCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Mootit.Pizzeria.Service.Store.Pizza[] PizzasField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BeverageCost {
            get {
                return this.BeverageCostField;
            }
            set {
                if ((this.BeverageCostField.Equals(value) != true)) {
                    this.BeverageCostField = value;
                    this.RaisePropertyChanged("BeverageCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mootit.Pizzeria.Service.Store.Beverage[] Beverages {
            get {
                return this.BeveragesField;
            }
            set {
                if ((object.ReferenceEquals(this.BeveragesField, value) != true)) {
                    this.BeveragesField = value;
                    this.RaisePropertyChanged("Beverages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Customer {
            get {
                return this.CustomerField;
            }
            set {
                if ((this.CustomerField.Equals(value) != true)) {
                    this.CustomerField = value;
                    this.RaisePropertyChanged("Customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Delivered {
            get {
                return this.DeliveredField;
            }
            set {
                if ((this.DeliveredField.Equals(value) != true)) {
                    this.DeliveredField = value;
                    this.RaisePropertyChanged("Delivered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DessertCost {
            get {
                return this.DessertCostField;
            }
            set {
                if ((this.DessertCostField.Equals(value) != true)) {
                    this.DessertCostField = value;
                    this.RaisePropertyChanged("DessertCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mootit.Pizzeria.Service.Store.Dessert[] Desserts {
            get {
                return this.DessertsField;
            }
            set {
                if ((object.ReferenceEquals(this.DessertsField, value) != true)) {
                    this.DessertsField = value;
                    this.RaisePropertyChanged("Desserts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PizzaCost {
            get {
                return this.PizzaCostField;
            }
            set {
                if ((this.PizzaCostField.Equals(value) != true)) {
                    this.PizzaCostField = value;
                    this.RaisePropertyChanged("PizzaCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Mootit.Pizzeria.Service.Store.Pizza[] Pizzas {
            get {
                return this.PizzasField;
            }
            set {
                if ((object.ReferenceEquals(this.PizzasField, value) != true)) {
                    this.PizzasField = value;
                    this.RaisePropertyChanged("Pizzas");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Beverage", Namespace="http://schemas.datacontract.org/2004/07/Mootit.Pizzeria.Entities")]
    [System.SerializableAttribute()]
    public partial class Beverage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dessert", Namespace="http://schemas.datacontract.org/2004/07/Mootit.Pizzeria.Entities")]
    [System.SerializableAttribute()]
    public partial class Dessert : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pizza", Namespace="http://schemas.datacontract.org/2004/07/Mootit.Pizzeria.Entities")]
    [System.SerializableAttribute()]
    public partial class Pizza : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlavorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short SliceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Flavor {
            get {
                return this.FlavorField;
            }
            set {
                if ((object.ReferenceEquals(this.FlavorField, value) != true)) {
                    this.FlavorField = value;
                    this.RaisePropertyChanged("Flavor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Slice {
            get {
                return this.SliceField;
            }
            set {
                if ((this.SliceField.Equals(value) != true)) {
                    this.SliceField = value;
                    this.RaisePropertyChanged("Slice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Mootit.Pizzeria.Service.Store.IStore")]
    public interface IStore {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/Sync", ReplyAction="http://tempuri.org/IStore/SyncResponse")]
        void Sync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/GetOrder", ReplyAction="http://tempuri.org/IStore/GetOrderResponse")]
        Mootit.Pizzeria.Service.Store.Order GetOrder(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/GetPizza", ReplyAction="http://tempuri.org/IStore/GetPizzaResponse")]
        Mootit.Pizzeria.Service.Store.Pizza GetPizza(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/GetDessert", ReplyAction="http://tempuri.org/IStore/GetDessertResponse")]
        Mootit.Pizzeria.Service.Store.Dessert GetDessert(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/GetBeverage", ReplyAction="http://tempuri.org/IStore/GetBeverageResponse")]
        Mootit.Pizzeria.Service.Store.Beverage GetBeverage(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/ListOrders", ReplyAction="http://tempuri.org/IStore/ListOrdersResponse")]
        Mootit.Pizzeria.Service.Store.Order[] ListOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/ListCustomerOrders", ReplyAction="http://tempuri.org/IStore/ListCustomerOrdersResponse")]
        Mootit.Pizzeria.Service.Store.Order[] ListCustomerOrders(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/ListPizzas", ReplyAction="http://tempuri.org/IStore/ListPizzasResponse")]
        Mootit.Pizzeria.Service.Store.Pizza[] ListPizzas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/ListDesserts", ReplyAction="http://tempuri.org/IStore/ListDessertsResponse")]
        Mootit.Pizzeria.Service.Store.Dessert[] ListDesserts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/ListBeverages", ReplyAction="http://tempuri.org/IStore/ListBeveragesResponse")]
        Mootit.Pizzeria.Service.Store.Beverage[] ListBeverages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStore/InsertOrder", ReplyAction="http://tempuri.org/IStore/InsertOrderResponse")]
        Mootit.Pizzeria.Service.Store.Order InsertOrder(Mootit.Pizzeria.Service.Store.Order order);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStoreChannel : Mootit.Pizzeria.Service.Store.IStore, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StoreClient : System.ServiceModel.ClientBase<Mootit.Pizzeria.Service.Store.IStore>, Mootit.Pizzeria.Service.Store.IStore {
        
        public StoreClient() {
        }
        
        public StoreClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StoreClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StoreClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Sync() {
            base.Channel.Sync();
        }
        
        public Mootit.Pizzeria.Service.Store.Order GetOrder(long id) {
            return base.Channel.GetOrder(id);
        }
        
        public Mootit.Pizzeria.Service.Store.Pizza GetPizza(long id) {
            return base.Channel.GetPizza(id);
        }
        
        public Mootit.Pizzeria.Service.Store.Dessert GetDessert(long id) {
            return base.Channel.GetDessert(id);
        }
        
        public Mootit.Pizzeria.Service.Store.Beverage GetBeverage(long id) {
            return base.Channel.GetBeverage(id);
        }
        
        public Mootit.Pizzeria.Service.Store.Order[] ListOrders() {
            return base.Channel.ListOrders();
        }
        
        public Mootit.Pizzeria.Service.Store.Order[] ListCustomerOrders(long id) {
            return base.Channel.ListCustomerOrders(id);
        }
        
        public Mootit.Pizzeria.Service.Store.Pizza[] ListPizzas() {
            return base.Channel.ListPizzas();
        }
        
        public Mootit.Pizzeria.Service.Store.Dessert[] ListDesserts() {
            return base.Channel.ListDesserts();
        }
        
        public Mootit.Pizzeria.Service.Store.Beverage[] ListBeverages() {
            return base.Channel.ListBeverages();
        }
        
        public Mootit.Pizzeria.Service.Store.Order InsertOrder(Mootit.Pizzeria.Service.Store.Order order) {
            return base.Channel.InsertOrder(order);
        }
    }
}
